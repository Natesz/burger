{"version":3,"sources":["assets/images/original.png","hoc/Auxi.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/ChekcoutSummary/CheckoutSummary.js","axios-orders.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxi","props","children","logo","className","style","height","src","burgerLogo","alt","NavigationItem","activeClassName","exact","to","link","NavigationItems","toolbar","layout","Auxi","BurgerIngredient","ingredient","this","type","Component","Burger","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","check","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchased","purchasable","backdrop","show","clicked","modal","modalClosed","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","continued","canceled","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCounted","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","join","history","pathname","search","sum","values","disabledInfo","OrderSummary","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","instance","axios","create","baseURL","input","inputElement","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","street","deliveryMethod","comment","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","response","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","Number","parseFloat","Orders","orders","loading","get","res","console","log","data","fetchedOrders","App","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3a23a909.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","\r\nconst auxi = (props) => props.children\r\n\r\nexport default auxi","import React from 'react';\r\n\r\nimport './Logo.css'\r\nimport burgerLogo from '../../assets/images/original.png'\r\n\r\nconst logo = (props) => (\r\n    <div className='Logo' style={ {height:props.height}}>\r\n        <img src={burgerLogo} alt=\"burger\"/>\r\n    </div>        \r\n);\r\n\r\nexport default logo","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './NavigationItem.css'\r\n\r\nconst NavigationItem = ( props ) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink activeClassName=\"active\" exact to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = () => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/burger\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport './Toolbar.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n\r\nconst toolbar = (props) => (\r\n    <div className='Toolbar'>\r\n        <Logo height='80%'/>\r\n        <nav >\r\n            <NavigationItems/>\r\n        </nav>\r\n    </div>        \r\n);\r\n\r\nexport default toolbar","import React from 'react';\r\nimport './Layout.css';\r\nimport Auxi from '../../hoc/Auxi';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\n\r\nconst layout = (props) => (\r\n    <Auxi>\r\n        <Toolbar/>\r\n        <main className='Content'>\r\n            {props.children}\r\n        </main>\r\n    </Auxi>\r\n);\r\n\r\nexport default layout;","import React, {Component} from 'react'\r\nimport './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BurgerIngredient extends Component {\r\n    \r\n    render(){\r\n\r\n    let ingredient = null;\r\n    \r\n    switch (this.props.type){\r\n        case('bread-bottom'):\r\n            ingredient = <div className='BreadBottom'></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={'BreadTop'}>\r\n                    <div className={'Seeds1'}></div>\r\n                    <div className={'Seeds2'}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n            ingredient = <div className='Meat'></div>;\r\n            break;\r\n        case('cheese'):\r\n            ingredient = <div className='Cheese'></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient = <div className='Bacon'></div>;\r\n            break;\r\n        case('salad'):\r\n            ingredient = <div className='Salad'></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    };\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\nimport './Burger.css'\r\n\r\nconst Burger = ({ingredients}) => {\r\n\r\n    let transformedIngredients = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return [...Array(ingredients[igKey])].map((_,i) => {\r\n                \r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\n\r\nimport './BuildControl.css'; \r\n\r\nconst buildControl = (props) => (\r\n    \r\n    <div className='BuildControl'>\r\n        <div className='Label'>{props.label}</div>\r\n        \r\n            <button className='Less' onClick={props.removed} disabled={props.check}>Less</button>\r\n            <button className='More' onClick={props.added}>More</button>\r\n        </div>\r\n    \r\n)\r\n\r\nexport default buildControl","import React from 'react';\r\nimport './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'},\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className='BuildControls'>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            \r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                check={props.disabled[ctrl.type]}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)} />\r\n        ))}\r\n        <button className='OrderButton' onClick={props.purchased} disabled={!props.purchasable}>ORDER NOW</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null        \r\n);\r\n\r\nexport default backdrop","import React from 'react';\r\n\r\nimport Auxi from '../../../hoc/Auxi'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport './Modal.css'\r\n\r\nconst modal = (props) => (\r\n    <Auxi>\r\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n            <div className='Modal' \r\n                style ={{\r\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: props.show ? '1' : '0'\r\n                }}>\r\n                {props.children}\r\n            </div>\r\n    </Auxi>        \r\n);\r\n\r\nexport default modal","import React from 'react';\r\n\r\nimport './Button.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        onClick={props.clicked}\r\n        className={\"Button \" + props.btnType}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button","import React from 'react';\r\n\r\nimport Auxi from '../../../hoc/Auxi'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li> );\r\n        });\r\n\r\n    return (\r\n        <Auxi>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p>Continue to checkout?</p>\r\n            <p><strong>Total price: {props.price.toFixed(2)}</strong></p>\r\n            <Button clicked={props.continued} btnType=\"Success\">CONTINUE</Button>\r\n            <Button clicked={props.canceled} btnType=\"Danger\">CANCEL</Button>\r\n        </Auxi>\r\n    );\r\n};\r\n\r\nexport default orderSummary","import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport Auxi from '../../hoc/Auxi';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 100,\r\n    cheese: 150,\r\n    meat: 250,\r\n    bacon: 200\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 100,\r\n        purchasable: false,\r\n        purchased: false  \r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        \r\n        const sum = Object.values( ingredients ).reduce( (sum, el) =>{\r\n            return sum+el;\r\n        }, 0 );\r\n \r\n        this.setState({purchasable : sum > 0})\r\n        \r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCounted = oldCount +1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCounted;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n       \r\n        const updatedCounted = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        if(updatedCounted >= 0){\r\n            updatedIngredients[type] = updatedCounted;\r\n        }\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchased: true})\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchased: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        \r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n        let disabledInfo = {...this.state.ingredients}\r\n        for (let key in disabledInfo ){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            <Auxi>\r\n                <Modal show={this.state.purchased} modalClosed={this.purchaseCancelHandler }>\r\n                    <OrderSummary \r\n                        price={this.state.totalPrice}\r\n                        ingredients={this.state.ingredients} \r\n                        canceled={this.purchaseCancelHandler}\r\n                        continued={this.purchaseContinueHandler}\r\n                    />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                \r\n                <BuildControls\r\n                    disabled={disabledInfo} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    price={this.state.totalPrice}\r\n                    purchased={this.purchaseHandler}\r\n                    purchasable={this.state.purchasable}/>\r\n            </Auxi>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-a70e9.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    switch(props.elementType) {\r\n        case('input'):\r\n            inputElement = <input \r\n                className=\"InputElement\" \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                className=\"InputElement\" \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select\r\n                    onChange={props.changed}\r\n                    className=\"InputElement\"\r\n                    value={props.value}>\r\n                        {props.elementConfig.options.map(option => (\r\n                            <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                        ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input className=\"InputElement\" {...props.elementConfig} value={props.value}/>\r\n\r\n    }\r\n    \r\n    return(\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: ''\r\n            },\r\n    \r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Address'\r\n                },\r\n                value: ''\r\n            },\r\n\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'easterEgg', displayValue: 'EasterEgg'},\r\n                        {value: 'endlessRunner', displayValue: 'EndlessRunner'},\r\n                        {value: 'defect', displayValue: 'Defect'}\r\n                    ]\r\n                },\r\n                value:'easterEgg'\r\n            },\r\n\r\n            comment: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Comment'\r\n                },\r\n                value:''\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        axios.post('/orders.json', order)\r\n            .then(response => this.props.history.push('/burger'))\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Data</h4>\r\n                <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input \r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value} \r\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                    ))}\r\n                    <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, { Component } from 'react';\r\n\r\nimport CheckoutSummary from '../../components/Order/ChekcoutSummary/CheckoutSummary';\r\nimport { Route } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    state={\r\n        ingredients: null,\r\n        totalPrice: 0\r\n    }\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for(let param of query.entries()) {\r\n            if (param[0] === 'price'){\r\n                price = param[1];\r\n            }else{\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({ingredients : ingredients, totalPrice: price});\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                ingredients={this.state.ingredients} \r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler}/>\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    render={(props) => (<ContactData ingredients={this.state.ingredients} {...props} price={this.state.totalPrice}/>)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\n\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px'}} \r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return(\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)} HUF</strong></p>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        axios.get('./orders.json')\r\n        \r\n            .then(res => {\r\n                console.log(res.data)\r\n                const fetchedOrders = [];\r\n                for(let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order=> (\r\n                     <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}/>\r\n                ))}\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Orders;","import React, {Component} from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <Layout>\n            <Switch>\n              <Route path='/checkout' component={Checkout}/>\n              <Route path='/orders' component={Orders}/>\n              <Route path='/burger' exact component={BurgerBuilder}/>\n            </Switch>\n          </Layout>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}